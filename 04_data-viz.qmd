---
title: Data Visualisation with ggplot2
date: 2024-10-01
---

```{r}
#| label: setup
#| include: false

library(here)
library(readr)
library(tidyr)
library(dplyr)
library(ggplot2)

interviews_plotting <- readr::read_csv(here("data/interviews_plotting.csv"))
percent_items <- interviews_plotting |>
    group_by(village) |>
    summarize(across(bicycle:no_listed_items, ~ sum(.x) / n() * 100)) |>
    pivot_longer(bicycle:no_listed_items, names_to = "items", values_to = "percent")
```


## Why ggplot2?

...because these are 'base' plots

:::: {.columns}
::: {.column}

```{r}
#| label: base-plot1
plot(number_items ~ no_membrs, 
     interviews_plotting, 
     col = "blue")
```

:::
::: {.column}

```{r}
#| label: base-plot2
boxplot(rooms ~ village, 
        interviews_plotting, 
        col = c("blue", "green", "red"))
```

:::
::::


## Why ggplot2?

...and these are ggplots üòé

::::{.columns}
:::{.column}

```{r}
#| label: ggplot-plot1

interviews_plotting %>% 
   ggplot(aes(x = no_membrs, y = number_items, color = village)) +
      geom_count() +
      theme_bw() +
      labs(x = "Number of items", 
           y = "Number of members in a household")
```

:::
:::{.column}

```{r}
#| label: ggplot-plot2

interviews_plotting %>%
  ggplot(aes(x = village, y = rooms, fill = village)) +
    geom_violin() +
    theme_minimal() +
    theme(legend.position = "none",
        panel.grid.major.x = element_blank())
```

:::
::::

---

:::: {.columns}
::: {.column}

```{r}
#| label: base-plot1-2
#| echo: false
plot(number_items ~ no_membrs, 
     interviews_plotting, 
     col = "blue")
```


```{r}
#| label: base-plot2-2
#| echo: false
boxplot(rooms ~ village, 
        interviews_plotting, 
        col = c("blue", "green", "red"))
```

:::
:::{.column}

```{r}
#| label: ggplot-plot1-2
#| echo: false
interviews_plotting %>% 
   ggplot(aes(x = no_membrs, y = number_items, color = village)) +
      geom_count() +
      theme_bw() +
      labs(x = "Number of items", 
           y = "Number of members in a household")
```


```{r}
#| label: ggplot-plot2-2
#| echo: false
interviews_plotting %>%
  ggplot(aes(x = village, y = rooms, fill = village)) +
    geom_violin() +
    theme_minimal() +
    theme(legend.position = "none",
        panel.grid.major.x = element_blank())
```

:::
::::


## ggplot2 {.center}

![](https://raw.githubusercontent.com/tidyverse/ggplot2/master/pkgdown/favicon/apple-touch-icon-120x120.png){.absolute height="120" right="0" top="-38"}

[**ggplot2**](https://ggplot2.tidyverse.org/) is a package (included in **tidyverse**) for creating highly customisable plots that are built
step-by-step by adding layers.

The separation of a plot into layers allows a high degree of flexibility with
minimal effort.

---

```
<DATA> %>%
    ggplot(aes(<MAPPINGS>)) +
    <GEOM_FUNCTION>() +
    <CUSTOMISATION>
```

[![Artwork by [@allison_horst](https://twitter.com/allison_horst)](https://raw.githubusercontent.com/allisonhorst/stats-illustrations/master/rstats-artwork/ggplot2_masterpiece.png){height="450" fig-alt="A fuzzy monster in a beret and scarf, critiquing their own column graph on a canvas in front of them while other assistant monsters (also in berets) carry over boxes full of elements that can be used to customize a graph (like themes and geometric shapes). In the background is a wall with framed data visualizations. Stylized text reads 'ggplot2: build a data masterpiece.'"}](https://github.com/allisonhorst/stats-illustrations)

::: {.footer}
More artwork by [Allison Horst](https://allisonhorst.com)
:::


# Data Visualisation Exercises {.center .inverse}


## Exercise 1 {.inverse}

‚è∞ **6 mins**

Create a new code chunk with the label `fig-rooms-scatter`.

Create a scatter plot of `rooms` by `village` with the `respondant_wall_type`
showing in different colours. 

Does this seem like a good way to display the relationship between these variables?

What other kinds of plots might you use to show this type of data?

`r countdown::countdown(minutes = 6, color_running_background  = "lightgreen", color_running_text = "black", color_finished_background = "red", color_finished_text =  "grey30")`


## Exercise 1: Solution {.inverse .smaller}

```{r exercise-2-setup, echo=FALSE}
#| label: setup-exercise2
#| include: false
percent_wall_type <- interviews_plotting %>%
    filter(respondent_wall_type != "cement") %>%
    count(village, respondent_wall_type) %>%
    group_by(village) %>%
    mutate(percent = (n / sum(n)) * 100) %>%
    ungroup()
```

::: {.panel-tabset}

## `geom_point`

```{r rooms-village-point}
#| out-width: "600"
#| fig-align: center
interviews_plotting %>%
    ggplot(aes(x = village, y = rooms, colour = respondent_wall_type)) +
    geom_point() +
    theme_classic() +
    scale_fill_viridis_d() # add colourblind-friendly palette
```

## `geom_jitter`

```{r rooms-village-jitter}
#| out-width: "600"
#| fig-align: center
interviews_plotting %>%
    ggplot(aes(x = village, y = rooms, colour = respondent_wall_type)) +
    geom_jitter(width = 0.2, height = 0.2) +
    theme_classic() +
    scale_fill_viridis_d() # add colourblind-friendly palette
```


:::

## Captioning {.smaller}

Now that we have created the plot, we can also create a caption using the `fig-cap` chunk option.

```{r}
#| label: fig-rooms-scatter
#| fig-cap: "This plot shows the relationship between the variables room and village, but doesn't do a very good job at it."
#| echo: fenced

interviews_plotting %>%
    ggplot(aes(x = village, y = rooms, colour = respondent_wall_type)) +
    geom_point() +
    theme_classic() +
    scale_fill_viridis_d() # add colourblind-friendly palette
```


## Exercise 2 {.inverse}

‚è∞ **4 mins**

Boxplots are useful summaries, but hide the shape of the distribution. For example,
if the distribution is bimodal, we would not see it in a boxplot.

Replace the box plot with a violin plot  
see `geom_violin()`

`r countdown::countdown(minutes = 4, color_running_background  = "lightgreen", color_running_text = "black", color_finished_background = "red", color_finished_text =  "grey30")`


## Exercise 2: Solution {.inverse}

```{r exercise-3-sol, fig.width=9, fig.height=3.5, fig.retina=3}
interviews_plotting %>%
  ggplot(aes(x = respondent_wall_type, y = rooms)) +
  geom_violin() +
  geom_jitter(alpha = 0.5, color = "tomato")
```



## Exercise 3 {.inverse auto-animate="true"}

‚è∞ **8 mins**

Create a bar plot showing the proportion of respondents in each village who are 
or are not part of an irrigation association (`memb_assoc`). 

Include only respondents who answered that question in the calculations and plot.

Which village had the lowest proportion of respondents in an irrigation association?

`r countdown::countdown(minutes = 8, color_running_background  = "lightgreen", color_running_text = "black", color_finished_background = "red", color_finished_text =  "grey30")`

## Exercise 3 {.inverse .smaller auto-animate="true"}

‚è∞ **8 mins**

Create a bar plot showing the proportion of respondents in each village who are 
or are not part of an irrigation association (`memb_assoc`). 

Include only respondents who answered that question in the calculations and plot.

Which village had the lowest proportion of respondents in an irrigation association?

`r countdown::countdown(minutes = 8, color_running_background  = "lightgreen", color_running_text = "black", color_finished_background = "red", color_finished_text =  "grey30")`

### Hint

```{r exercise-4-hint}
#| echo: true
percent_memb_assoc <- interviews_plotting %>%
  filter(!is.na(memb_assoc)) %>%
  count(village, memb_assoc) %>%
  group_by(village) %>%
  mutate(percent = (n / sum(n)) * 100) %>%
  ungroup()
```


## Exercise 3: Solution {.inverse}

```{r exercise-4-sol, fig.width=7, fig.height=2.5, fig.retina=3}
#| echo: true
percent_memb_assoc <- interviews_plotting %>%
  filter(!is.na(memb_assoc)) %>%
  count(village, memb_assoc) %>%
  group_by(village) %>%
  mutate(percent = (n / sum(n)) * 100) %>%
  ungroup()

percent_memb_assoc %>%
   ggplot(aes(x = village, y = percent, fill = memb_assoc)) +
    geom_bar(stat = "identity", position = "dodge")
```


## Exercise 4 {.inverse}

‚è∞ **4 mins**

Experiment with at least two different themes. Build the previous plot using each
of those themes. 

Which do you like best?

`r countdown::countdown(minutes = 4, color_running_background  = "lightgreen", color_running_text = "black", color_finished_background = "red", color_finished_text =  "grey30")`

. . .

### Hint

::::{.columns}
:::{.column}
`theme_minimal`  
`theme_void`  
`theme_classic`  
:::
:::{.column}
`theme_dark`  
`theme_grey`  
`theme_light`
:::
::::

## Exercise 4: Solution {.inverse}

::: {.r-stack}

```{r}
#| label: exercise-5-sol
#| code-line-numbers: "5"
percent_items %>%
    ggplot(aes(x = village, y = percent)) +
    geom_bar(stat = "identity", position = "dodge") +
    facet_wrap(~ items) +
    theme_bw() +
    theme(panel.grid = element_blank())
```

![GIPHY](https://media.giphy.com/media/43xU2PKxB9AUm5Z4C1/giphy.gif){.fragment width="500"}

:::

